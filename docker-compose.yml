# docker compose build --no-cache
# docker compose up -d

services:
  frontend:
    build:
      context: ./FrontendReact/ff-articles-frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${GMAIL_OAUTH_REDIRECT_URI}
        - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GMAIL_OAUTH_CLIENT_ID}
        - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
    depends_on:
      - backend
    networks:
      - firefly-network
    ports:
      - "3000:3000"

  backend:
    build:
      context: ./BackendDotNet/FF.Articles.Backend
      dockerfile: Dockerfile
    environment:
      # CORS: Frontend App URL
      - AllowedOrigins__0=${NEXT_PUBLIC_BASE_URL}
      # GmailOAuth
      - GmailOAuth__ClientId=${GMAIL_OAUTH_CLIENT_ID}
      - GmailOAuth__ClientSecret=${GMAIL_OAUTH_CLIENT_SECRET}
      - GmailOAuth__RedirectUri=${GMAIL_OAUTH_REDIRECT_URI}
      # AI Services
      - DeepSeek__ApiKey=${DEEPSEEK_API_KEY}
      - Ollama__ApiUrl=${OLLAMA_API_URL}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - firefly-network
    ports:
      - "21000:21000"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - firefly-network
    # Add memory limits to prevent OOM issues
    deploy:
      resources:
        limits:
          memory: 256M
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "15672:15672"  # Management UI
      - "5672:5672"    # AMQP port

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - firefly-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  firefly-network:
    driver: bridge

volumes:
  postgres-data:
  rabbitmq-data:


# NEXT_PUBLIC_BASE_URL=http://localhost:3000
# GMAIL_OAUTH_CLIENT_ID=xxx
# GMAIL_OAUTH_CLIENT_SECRET=xxx
# GMAIL_OAUTH_REDIRECT_URI=xxx
# OLLAMA_API_URL=http://localhost:11434
# DEEPSEEK_API_KEY=xxx
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=postgres
# RABBITMQ_DEFAULT_USER=rabbitmq
# RABBITMQ_DEFAULT_PASS=rabbitmq
