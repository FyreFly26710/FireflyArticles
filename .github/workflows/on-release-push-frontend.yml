name: On Release Push Frontend Image

on:
  push:
    branches: 
      - main
      - master
  workflow_dispatch:
# Commit message format to trigger the workflow:
# 
# App Version X.Y.Z - Builds and pushes both frontend and backend 
# 
jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      build_app: ${{ steps.check.outputs.build_app }}
      version: ${{ steps.check.outputs.version }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Check commit message
        id: check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          
          if [[ "$COMMIT_MSG" =~ App[[:space:]]+Version[[:space:]]+([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION=$(echo "$COMMIT_MSG" | grep -oP 'Version \K[0-9]+\.[0-9]+\.[0-9]+')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Extracted version: $VERSION"
            
            echo "build_app=true" >> $GITHUB_OUTPUT
          else
            echo "build_app=false" >> $GITHUB_OUTPUT
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

  build-and-push-frontend:
    needs: check-commit
    if: needs.check-commit.outputs.build_app == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        if: needs.check-commit.outputs.build_app == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./FrontendReact/ff-articles-frontend
          push: true
          tags: |
            firefly26710/ffarticles-frontend:latest
            firefly26710/ffarticles-frontend:${{ needs.check-commit.outputs.version }}
          build-args: |
            NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.GMAIL_OAUTH_CLIENT_ID }}
            NEXT_PUBLIC_BASE_URL=${{ secrets.BASE_URL_API }}

  deploy-frontend-to-server:
    needs: build-and-push-frontend
    if: needs.check-commit.outputs.build_app == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger deployment
        if: success()
        run: |
          curl -X GET ${{ secrets.WEBHOOK_URL }} --header 'Authorization: ${{ secrets.WEBHOOK_AUTH }}'
