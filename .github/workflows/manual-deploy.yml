name: Manual Deploy

on:
  workflow_dispatch:
    
jobs:
  deploy-backend-to-server:
    runs-on: ubuntu-latest
    
    steps:
      - name: Install cloudflared
        run: |
          sudo apt update
          sudo apt install -y curl gnupg lsb-release
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-main.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflared.list
          sudo apt update
          sudo apt install -y cloudflared


      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Configure SSH for Cloudflare Tunnel
        run: |
          echo "Host cf-mac-server
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USERNAME }}
            ProxyCommand cloudflared access ssh --hostname %h" >> ~/.ssh/config

      - name: Deploy to macOS server over Cloudflare Tunnel
        run: |
          ssh -o StrictHostKeyChecking=no cf-mac-server \
            "cd /Users/liqiangwang/Repo/FireflyArticles/Deploy && export PATH=/usr/local/bin:/opt/homebrew/bin:$PATH && docker compose -f docker-compose.backend.yml up -d"

  deploy-frontend-to-server:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger deployment
        if: success()
        run: |
          curl -X GET ${{ secrets.WEBHOOK_URL }} --header 'Authorization: ${{ secrets.WEBHOOK_AUTH }}'
